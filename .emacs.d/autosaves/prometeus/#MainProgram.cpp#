#include <iostream>
#include "GameBoard.h"
#include "Shape.h"
#include "Placement.h"

using namespace std;

int main()
{
	CGameBoard board1(6, 6);

	board1.Display();

	board1.FillCell(1, 2);
	board1.FillCell(2, 3);
	board1.FillCell(3, 1);
	board1.FillCell(3, 2);
	board1.FillCell(3, 3);
	board1.FillCell(3, 4);
	board1.Display();

	board1.EmptyCell(3, 4);
	board1.Display();

	board1.CalculateNextGeneration();

	int numChange = board1.NumberOfChanges();

	cout << numChange << endl;

	board1.Run();

	CGameBoard board2(13, 13);

	board2.Display();

	CShape glider(3, 3);

	glider.FillCell(0, 1);
	glider.FillCell(1, 2);
	glider.FillCell(2, 0);
	glider.FillCell(2, 1);
	glider.FillCell(2, 2);

	glider.Draw();

	int rowCount = glider.RowCount();
	int colCount = glider.ColumnCount();
	int cellVal = glider.GetCellValue(1, 2);

	board2 << new CPlacement(0, 0) << glider;

	board2.Display();

	board2 << new CPlacement(2, 1) << glider;

	board2.Display();

	board2.Run();

	board2.Clear();
	board2.Display();

	CShape smallExploder(4, 3);
	smallExploder.FillCell(0, 1);
	smallExploder.FillCell(1, 0);
	smallExploder.FillCell(1, 1);
	smallExploder.FillCell(1, 2);
	smallExploder.FillCell(2, 0);
	smallExploder.FillCell(2, 2);
	smallExploder.FillCell(3, 1);
	smallExploder.Draw();

	board2 << new CPlacement(5, 5) << smallExploder;

	board2.Run();

	CShape glider2 = glider;
	glider2.FillCell(1, 0);
	glider2.EmptyCell(1, 2);

	glider.Draw();
	glider2.Draw();

	glider2 = smallExploder;
	glider2.FillCell(2, 1);
	glider2.EmptyCell(1, 1);

	smallExploder.Draw();
	glider2.Draw();
	
	
	return 0;
}
/* For the emacs weenies in the crowd.
Local Variables:
   c-basic-offset: 8
End:
*/
